========================================
Packer Setup and Tutorial for CentOS
========================================
Instructions are for packer version 1.6.0 and CentOS 8 on 64 bit architecture.

========================================
Prereqs
========================================
Ensure the following packages are installed: 
    wget
    unzip 
Packer Workspace Scripts can be downloaded from GitHub: 

   GitHub: https://github.com/Optikx187/Project_Mandalla/tree/master/AWS%20Packer/Example

Configure AWS User with Prgramatic access: 
    User with 'AmazonEC2FullAccess' or 'AdministratorAccess' to create images
        Steps: 
            -Login to AWS Console
            -In the services go to IAM
            -Create a User
            -create username 
            -select programatic access
            -click next
            -select 'Attach existing policies directly'
            -add 'AdministratorAccess' policy
            -click next: tags
            -click next: review
            -click create user
            -Record AccessKEY and Secret Access like given below.

Configure ENV Variables: 
    export AWS_MAX_ATTEMPTS=60                      #build can fail without this set
    export AWS_POLL_DELAY_SECONDS=60                #build can fail without this set
    export AWS_ACCESS_KEY_ID=ACCESSKEYHERE
    export AWS_SECRET_ACCESS_KEY=SECRETKEYHERE

========================================
Download and Install Packer
========================================

1) Download packer: 
    cmd: 
        export PACKER_RELEASE="1.6.0"
        cd /tmp/
        wget https://releases.hashicorp.com/packer/${PACKER_RELEASE}/packer_${PACKER_RELEASE}_linux_amd64.zip
        unzip packer_${PACKER_RELEASE}_linux_amd64.zip
        sudo mv packer /usr/local/bin
2) Check packer version to see if its installed properly: 
    cmd: 
        packer --version 

========================================
Basic Packer Tutorial to build AWS AMI- CentOS
========================================

Navigate to a location to build your packer image and make a directory to serve as your workspace. 
 -Create a workspace directory(ex:/apps/Project_Mandalla/Packer_Terraform_AWS/PackerImages)
    cmd: mkdir packerimage 

 -Export AWS access keys to allow programatic access to the cloud(prereq step)

    export AWS_ACCESS_KEY_ID=<key>
    export AWS_SECRET_ACCESS_KEY=<key>

 -Create template file for packer
    NOTE: The example below contains provisioners. You will need a couple more dependant files for this to build ad deploy properly
    cmd: touch ubuntu.json
    contents of json: 
---
{
    "variables": {
        "aws_access_key": "{{env `AWS_ACCESS_KEY_ID`}}", 
        "aws_secret_key": "{{env `AWS_SECRET_ACCESS_KEY`}}",
        "region": "us-east-1"
    },
    "builders": [
        {
            "access_key": "{{user `aws_access_key`}}",
            "ami_name": "packer-aws-demo2-{{timestamp}}",
            "instance_type": "t2.micro",
            "region": "{{user `region`}}",
            "secret_key": "{{user `aws_secret_key`}}",
            "source_ami_filter": {
              "filters": {
              "virtualization-type": "hvm",
              "name": "ubuntu/images/*ubuntu-xenial-16.04-amd64-server-*",
              "root-device-type": "ebs"
              },
              "owners": ["099720109477"],
              "most_recent": true
            },
            "ssh_username": "ubuntu",
            "type": "amazon-ebs"
        }
    ],
    "provisioners": [
        {
            "type": "file",
            "source": "./welcomefile",
            "destination": "/home/ubuntu/"
        },
        {
            "type": "shell",
            "inline":[
                "ls -al /home/ubuntu",
                "cat /home/ubuntu/welcomefile"
            ]
        },
        {
            "type": "shell",
            "script": "./setup.sh"
        }
    ]
}
...
 -File contents for Provisioner block
    -welcomefile 
        contents:
            Welcome User!

    -setup.sh
        contents: 
            sudo apt-get -y update
            sudo apt-get -y install nano
            sudo apt-get -y install unzip
            sudo apt-get -y install wget

 -Validate packer image"
    cmd: packer validate <.json file>

-Build packer image
    cmd: packer build <.json file>

-Your AMI should be vailable in AWS!

========================================
Helpful script to configure vars and run packer.
========================================
-Script and contents:
    Script: 
        start-packer.sh
    contents:
#!/bin/bash
infile=$1
if [ -z "$infile" ]
then
        echo "Param \$infile not passed correctly"
else
 echo "setting AWS connection vars"
 export AWS_MAX_ATTEMPTS=60
 export AWS_POLL_DELAY_SECONDS=60
 export AWS_ACCESS_KEY_ID=<key>
 export AWS_SECRET_ACCESS_KEY=<key>
 echo "Running packer build on $infile"
 packer build $infile
fi
    use: ./setup-packer ubuntu.json

========================================
Helpful Documentation: 
========================================
Install packer: 
    https://computingforgeeks.com/install-latest-packer-on-linux-freebsd-macos-windows/ 
    
    Hashi Corp docs: 
        https://learn.hashicorp.com/packer/getting-started/build-image

Packer+TF+AWS 
    https://www.middlewareinventory.com/blog/packer-aws-terraform-example/
