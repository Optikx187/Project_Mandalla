==========================
Prereq
==========================
1) Terraform must be installed on the system.. in our case its centOS
2) Machine must have access to the internet
=========================================
There are various ways to connect to Az for this documentation we will use the service principal method 

Other Methods can be found in the terraform documentation here
    doc: https://www.terraform.io/docs/providers/azurerm/guides/service_principal_client_secret.html

======================================================
Configure Service Principle in AD( Using Azure Portal)
======================================================

Configure Service principal on Azure through the Azure Portal
    
    ***
        -Create AZ Domain User: 
            - Automation@<account>.onmicrosoft.com
        ***Account:  Automation@optikx187outlook.onmicrosoft.com
        ***Pass:  !!
        -Assign AZ Domain User the role of User Administrator. Done by Admin
            -verified in user(Atomation@...'s AZ AD > User Setting field)
        -Change user role permissions: 
        Doc: https://docs.microsoft.com/en-us/azure/active-directory/develop/howto-create-service-principal-portal#required-permissions
            -Configure Key Vault
        -Add Access policy
        -Add key, secret, and certificate permissions you want to grant your application. Select the service principal you created previously
    ***

    -Create Az AD Domain
     -Select Azure Active Directory
     -more!

    -Configure Registration in AZ AD 
        Doc: https://www.terraform.io/docs/providers/azurerm/guides/service_principal_client_secret.html
        -Navigate to the Azure Active Directory overview within the Azure Portal 
        -Then select the App Registration blade
        -Click the New registration button at the top to add a new Application within Azure Active Directory
        -Set the following values then press Create:
            -Name = Terraform
            -Supported Account Types: Accounts in this organization only
            -Redirect URI = (blank)
        -Record the Application ID(client_id) and the Directory ID(tenant_id)
            -client_id = 67998207-e1b5-47b0-8d48-f4589cd775f9
            -tenant_id = 99bdbdda-ec0b-4d3a-9840-2df5f2a0e7af
        doc: https://docs.microsoft.com/en-us/azure/active-directory/develop/howto-create-service-principal-portal 

    -Generate Client Secret for AZ AD App
        NOTE: This will be used for authentication
        -On the App Registration page select 'New Client Secret'
        -Select 'New Client Secret', Provide a discription and hit 'add'
        -Record the secret value: 
            client_secret = qg2dhp87~8pG6-oDxGUt1~dRcV~R.QSfw9
        NOTE: This string will only display once so record it!
        NOTE: This can be configured to expire

    -Grant application access to manage resources in AZ Subscriptions
        -Navigate to subscription blade in AZ portal
        -Select Sub you want to use
        -Select Access Control > Add > Add role assignment
        -Select Role which grants appropriate permissions needed for service principal
            -NOTE: contributor role provides read/write
        -Add created service principal by searching for the one created earlier, 'Terraform'
        -Select Save

Configure Terraform on CentOS: 

    -Set up environment Vars so TF knows about connection strings: 
        example:
            export ARM_CLIENT_ID="00000000-0000-0000-0000-000000000000"
            export ARM_CLIENT_SECRET="00000000-0000-0000-0000-000000000000"
            export ARM_SUBSCRIPTION_ID="00000000-0000-0000-0000-000000000000"
            export ARM_TENANT_ID="00000000-0000-0000-0000-000000000000"
            NOTE: It may be handy to create a shell script to set and unset these vars before and after a run

            -or- 

            set in .tf file
            example: 
            provider "azurerm" {
            # Whilst version is optional, we /strongly recommend/ using it to pin the version of the Provider being used      
            version = "=2.5.0"
            client_id       ="67998207-e1b5-47b0-8d48-f4589cd775f9"
            client_secret   ="xxxdhp87~8pG6-oDxGUt1~dRcV~R.QSfw9"
            subscription_id ="129fd1cf-e2c2-4510-9462-311f41bac3cd"
            tenant_id       ="99bdbdda-ec0b-4d3a-9840-2df5f2a0e7af"
            features {}
            }


    -Create /etc/scripts/Terraform_Script/test.tf file with commnad below
        contents: 


    -Test terraform build
        From Scripts dir: /etc/scripts/Terraform_Scripts
        sudo /usr/local/bin/terraform init >plan > apply





    -